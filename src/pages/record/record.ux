<template>
  <div class="page" @swipe="toPage">
    <!-- 顶栏 -->
    <div class="top">
      <div class="blank"></div>
      <text class="title">历史记录</text>
      <div class="blank"></div>
    </div>

    <scroll class="scroll-container">
      <!-- 加载状态 -->
      <div class="loading-state" if="{{ isLoading }}">
        <progress type="circular" class="loading-progress"></progress>
        <text class="loading-text">加载记录中...</text>
      </div>

      <!-- 记录列表 -->
      <list class="record-list" elif="{{ !isLoading && records.length != 0 }}">
        <list-item for="{{ records }}" type="record" class="record-item">
          <text class="record-date">{{ $item.date }}</text>
          <text class="record-total" style="color: #ffffff70">{{ $item.total }}分</text>
        </list-item>
      </list>

      <!-- 空状态 -->
      <div class="empty-state" elif="{{ !isLoading && records.length == 0 }}">
        <image src="/common/warn.png" class="empty-icon"></image>
        <text class="empty-text">暂无历史记录</text>
        <text class="empty-hint">开始专注以记录数据</text>
      </div>
    </scroll>
  </div>
</template>

<script>
import router from "@system.router"
import focusDB from "../../database/focusDB"

export default {
  private: {
    isLoading: true, // 添加加载状态
    records: [], // 历史记录数据
    totalMinutes: 0, // 总专注分钟数
    recordDays: 0, // 有记录的天数
    viewMode: "list" // 视图模式（list/chart）
  },

  async onInit() {
    try {
      this.isLoading = true
      // 开启详细日志
      focusDB.setLogging(true)
      // 确保数据库已初始化
      await focusDB.init()
      console.log("加载记录")

      // 加载记录
      this.records = focusDB.getHistoryRecords()
      console.log("记录加载结束")
      const stats = focusDB.getStatistics()
      this.totalMinutes = stats.totalMinutes
      this.recordDays = stats.recordDays
      console.log(this.records)
    } catch (err) {
      console.error("加载记录失败", err)
    } finally {
      this.isLoading = false
    }
  },

  toPre() {
    router.back()
  },

  toPage(eve) {
    switch (eve.direction) {
      case "left":
        console.log("左滑")
        break
      case "right":
        console.log("右滑")
        this.toPre()
        break
      case "up":
        console.log("上滑")
        break
      case "down":
        console.log("下滑")
        break
    }
  }
}
</script>

<style>
/* 页面 */
.page {
  flex-direction: column;
  justify-content: center;
  height: 100%;
  background-color: #000000;
  align-items: center;
  padding: 20px;
  position: relative;
  transition: opacity 0.3s ease-in-out;
}

/* 顶栏 */
.top {
  position: absolute;
  top: 20px;
  width: 100%;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.blank {
  height: 100px;
  width: 100px;
}

.title {
  font-size: 48px;
  color: #ffffff;
  font-weight: bold;
  text-align: center;
}

/* 加载状态样式 */
.loading-state {
  flex: 1;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.loading-progress {
  width: 100px;
  height: 100px;
  color: #173618; /* 绿色加载进度 */
}

.loading-text {
  font-size: 32px;
  color: #aaaaaa;
  margin-top: 20px;
}

/* 记录列表 */
.scroll-container {
  margin-top: 60px;
  width: 100%;
  height: 585px;
  flex-direction: column;
  box-sizing: border-box;
  justify-content: flex-start;
  align-items: center;
}

.record-list {
  flex-grow: 1;
  width: 100%;
  flex-direction: column;
  justify-content: flex-start;
}

.record-item {
  height: 100px;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  border-radius: 35px;
  border: 5px solid #ffffff70;
  padding: 15px;
  margin-bottom: 10px;
}

.record-date {
  font-size: 42px;
  color: #ffffff;
  font-weight: bold;
}

.record-total {
  font-size: 42px;
  color: #ffffff;
}

/* 空状态 */
.empty-state {
  flex-grow: 1;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.empty-icon {
  width: 120px;
  height: 120px;
  margin-bottom: 20px;
}

.empty-text {
  font-size: 48px;
  color: #ffffff;
  margin-bottom: 20px;
}

.empty-hint {
  font-size: 32px;
  color: #aaaaaa;
}
</style>
